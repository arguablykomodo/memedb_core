stages:
  - lint
  - test
  - fuzz
  - bench

cache:
  key: stable-${CI_COMMIT_REF_SLUG}
  paths:
    - target/

lint:
  stage: lint
  image: rust:latest
  before_script:
    - rustup component add clippy
  script:
    - cargo clippy --all-targets --all-features -- -D warnings

stable-test:
  stage: test
  image: rust:latest
  script:
    - cargo test

nightly-test:
  stage: test
  image: rustlang/rust:nightly
  script:
    - cargo test
  allow_failure: true
  cache:
    key: nightly-${CI_COMMIT_REF_SLUG}
    paths:
      - target/

fuzz:
  stage: fuzz
  image: rust:latest
  script:
    - cargo install cargo-fuzz # TODO: find a way to cache this
    - cargo fuzz run --release -s none read_never_panics  -- -max_total_time=600 -seed_inputs=@fuzz/seed_inputs
    - cargo fuzz run --release -s none write_never_panics -- -max_total_time=600 -seed_inputs=@fuzz/seed_inputs
    - cargo fuzz run --release -s none identity           -- -max_total_time=600 -seed_inputs=@fuzz/seed_inputs
  artifacts:
    paths:
      - fuzz/artifacts/
      - fuzz/corpus/

bench:
  stage: bench
  image: rust:latest
  script:
    - cargo bench
  artifacts:
    paths:
      - target/criterion/
